"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/exchangeRate.ts":
/*!**************************************!*\
  !*** ./src/services/exchangeRate.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exchangeRateService: function() { return /* binding */ exchangeRateService; }\n/* harmony export */ });\nconst API_KEY = \"7d4aaf09fad193ab34242556\"; // You'll need to sign up for a free API key at https://www.exchangerate-api.com/\nconst BASE_URL = \"https://v6.exchangerate-api.com/v6\";\nclass ExchangeRateService {\n    static getInstance() {\n        if (!ExchangeRateService.instance) {\n            ExchangeRateService.instance = new ExchangeRateService();\n        }\n        return ExchangeRateService.instance;\n    }\n    async getExchangeRate() {\n        const now = Date.now();\n        // Return cached rate if it's less than 1 hour old\n        if (now - this.lastUpdate < this.CACHE_DURATION) {\n            return this.rate;\n        }\n        try {\n            const response = await fetch(\"\".concat(BASE_URL, \"/\").concat(API_KEY, \"/latest/CAD\"));\n            const data = await response.json();\n            if (data.result === \"success\") {\n                this.rate = data.conversion_rates.USD;\n                this.lastUpdate = now;\n                return this.rate;\n            }\n            throw new Error(\"Failed to fetch exchange rate\");\n        } catch (error) {\n            console.error(\"Error fetching exchange rate:\", error);\n            return this.rate; // Return cached rate if fetch fails\n        }\n    }\n    constructor(){\n        this.rate = 0.74 // Default fallback rate\n        ;\n        this.lastUpdate = 0;\n        this.CACHE_DURATION = 1000 * 60 * 60 // 1 hour in milliseconds\n        ;\n    }\n}\nconst exchangeRateService = ExchangeRateService.getInstance();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9leGNoYW5nZVJhdGUudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLFVBQVUsNEJBQTRCLGlGQUFpRjtBQUM3SCxNQUFNQyxXQUFXO0FBV2pCLE1BQU1DO0lBUUosT0FBT0MsY0FBbUM7UUFDeEMsSUFBSSxDQUFDRCxvQkFBb0JFLFFBQVEsRUFBRTtZQUNqQ0Ysb0JBQW9CRSxRQUFRLEdBQUcsSUFBSUY7UUFDckM7UUFDQSxPQUFPQSxvQkFBb0JFLFFBQVE7SUFDckM7SUFFQSxNQUFNQyxrQkFBbUM7UUFDdkMsTUFBTUMsTUFBTUMsS0FBS0QsR0FBRztRQUVwQixrREFBa0Q7UUFDbEQsSUFBSUEsTUFBTSxJQUFJLENBQUNFLFVBQVUsR0FBRyxJQUFJLENBQUNDLGNBQWMsRUFBRTtZQUMvQyxPQUFPLElBQUksQ0FBQ0MsSUFBSTtRQUNsQjtRQUVBLElBQUk7WUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sR0FBZVosT0FBWkMsVUFBUyxLQUFXLE9BQVJELFNBQVE7WUFDcEQsTUFBTWEsT0FBNkIsTUFBTUYsU0FBU0csSUFBSTtZQUV0RCxJQUFJRCxLQUFLRSxNQUFNLEtBQUssV0FBVztnQkFDN0IsSUFBSSxDQUFDTCxJQUFJLEdBQUdHLEtBQUtHLGdCQUFnQixDQUFDQyxHQUFHO2dCQUNyQyxJQUFJLENBQUNULFVBQVUsR0FBR0Y7Z0JBQ2xCLE9BQU8sSUFBSSxDQUFDSSxJQUFJO1lBQ2xCO1lBRUEsTUFBTSxJQUFJUSxNQUFNO1FBQ2xCLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsaUNBQWlDQTtZQUMvQyxPQUFPLElBQUksQ0FBQ1QsSUFBSSxFQUFFLG9DQUFvQztRQUN4RDtJQUNGO0lBaENBLGFBQXNCO2FBSmRBLE9BQWUsS0FBTSx3QkFBd0I7O2FBQzdDRixhQUFxQjthQUNaQyxpQkFBaUIsT0FBTyxLQUFLLEdBQUkseUJBQXlCOztJQUVwRDtBQWlDekI7QUFFTyxNQUFNWSxzQkFBc0JuQixvQkFBb0JDLFdBQVcsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvZXhjaGFuZ2VSYXRlLnRzPzNiOTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQVBJX0tFWSA9ICc3ZDRhYWYwOWZhZDE5M2FiMzQyNDI1NTYnOyAvLyBZb3UnbGwgbmVlZCB0byBzaWduIHVwIGZvciBhIGZyZWUgQVBJIGtleSBhdCBodHRwczovL3d3dy5leGNoYW5nZXJhdGUtYXBpLmNvbS9cbmNvbnN0IEJBU0VfVVJMID0gJ2h0dHBzOi8vdjYuZXhjaGFuZ2VyYXRlLWFwaS5jb20vdjYnO1xuXG5pbnRlcmZhY2UgRXhjaGFuZ2VSYXRlUmVzcG9uc2Uge1xuICByZXN1bHQ6IHN0cmluZztcbiAgYmFzZV9jb2RlOiBzdHJpbmc7XG4gIGNvbnZlcnNpb25fcmF0ZXM6IHtcbiAgICBVU0Q6IG51bWJlcjtcbiAgICBDQUQ6IG51bWJlcjtcbiAgfTtcbn1cblxuY2xhc3MgRXhjaGFuZ2VSYXRlU2VydmljZSB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBFeGNoYW5nZVJhdGVTZXJ2aWNlO1xuICBwcml2YXRlIHJhdGU6IG51bWJlciA9IDAuNzQ7IC8vIERlZmF1bHQgZmFsbGJhY2sgcmF0ZVxuICBwcml2YXRlIGxhc3RVcGRhdGU6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgcmVhZG9ubHkgQ0FDSEVfRFVSQVRJT04gPSAxMDAwICogNjAgKiA2MDsgLy8gMSBob3VyIGluIG1pbGxpc2Vjb25kc1xuXG4gIHByaXZhdGUgY29uc3RydWN0b3IoKSB7fVxuXG4gIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBFeGNoYW5nZVJhdGVTZXJ2aWNlIHtcbiAgICBpZiAoIUV4Y2hhbmdlUmF0ZVNlcnZpY2UuaW5zdGFuY2UpIHtcbiAgICAgIEV4Y2hhbmdlUmF0ZVNlcnZpY2UuaW5zdGFuY2UgPSBuZXcgRXhjaGFuZ2VSYXRlU2VydmljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gRXhjaGFuZ2VSYXRlU2VydmljZS5pbnN0YW5jZTtcbiAgfVxuXG4gIGFzeW5jIGdldEV4Y2hhbmdlUmF0ZSgpOiBQcm9taXNlPG51bWJlcj4ge1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgXG4gICAgLy8gUmV0dXJuIGNhY2hlZCByYXRlIGlmIGl0J3MgbGVzcyB0aGFuIDEgaG91ciBvbGRcbiAgICBpZiAobm93IC0gdGhpcy5sYXN0VXBkYXRlIDwgdGhpcy5DQUNIRV9EVVJBVElPTikge1xuICAgICAgcmV0dXJuIHRoaXMucmF0ZTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtCQVNFX1VSTH0vJHtBUElfS0VZfS9sYXRlc3QvQ0FEYCk7XG4gICAgICBjb25zdCBkYXRhOiBFeGNoYW5nZVJhdGVSZXNwb25zZSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIFxuICAgICAgaWYgKGRhdGEucmVzdWx0ID09PSAnc3VjY2VzcycpIHtcbiAgICAgICAgdGhpcy5yYXRlID0gZGF0YS5jb252ZXJzaW9uX3JhdGVzLlVTRDtcbiAgICAgICAgdGhpcy5sYXN0VXBkYXRlID0gbm93O1xuICAgICAgICByZXR1cm4gdGhpcy5yYXRlO1xuICAgICAgfVxuICAgICAgXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBleGNoYW5nZSByYXRlJyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGV4Y2hhbmdlIHJhdGU6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHRoaXMucmF0ZTsgLy8gUmV0dXJuIGNhY2hlZCByYXRlIGlmIGZldGNoIGZhaWxzXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBleGNoYW5nZVJhdGVTZXJ2aWNlID0gRXhjaGFuZ2VSYXRlU2VydmljZS5nZXRJbnN0YW5jZSgpOyAiXSwibmFtZXMiOlsiQVBJX0tFWSIsIkJBU0VfVVJMIiwiRXhjaGFuZ2VSYXRlU2VydmljZSIsImdldEluc3RhbmNlIiwiaW5zdGFuY2UiLCJnZXRFeGNoYW5nZVJhdGUiLCJub3ciLCJEYXRlIiwibGFzdFVwZGF0ZSIsIkNBQ0hFX0RVUkFUSU9OIiwicmF0ZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsInJlc3VsdCIsImNvbnZlcnNpb25fcmF0ZXMiLCJVU0QiLCJFcnJvciIsImVycm9yIiwiY29uc29sZSIsImV4Y2hhbmdlUmF0ZVNlcnZpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/exchangeRate.ts\n"));

/***/ })

});