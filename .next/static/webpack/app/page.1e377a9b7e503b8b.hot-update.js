"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/db.ts":
/*!****************************!*\
  !*** ./src/services/db.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: function() { return /* binding */ db; }\n/* harmony export */ });\nconst DB_NAME = \"bidderDB\";\nconst STORE_NAME = \"items\";\nconst DB_VERSION = 3;\nclass DatabaseService {\n    async init() {\n        return new Promise((resolve, reject)=>{\n            const request = indexedDB.open(DB_NAME, DB_VERSION);\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n            request.onsuccess = ()=>{\n                this.db = request.result;\n                resolve();\n            };\n            request.onupgradeneeded = (event)=>{\n                const db = event.target.result;\n                if (db.objectStoreNames.contains(STORE_NAME)) {\n                    db.deleteObjectStore(STORE_NAME);\n                }\n                db.createObjectStore(STORE_NAME, {\n                    keyPath: \"id\",\n                    autoIncrement: true\n                });\n            };\n        });\n    }\n    async getAllItems() {\n        return new Promise((resolve, reject)=>{\n            if (!this.db) {\n                reject(new Error(\"Database not initialized\"));\n                return;\n            }\n            const transaction = this.db.transaction(STORE_NAME, \"readonly\");\n            const store = transaction.objectStore(STORE_NAME);\n            const request = store.getAll();\n            request.onsuccess = ()=>{\n                resolve(request.result);\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    async getArchivedItems() {\n        return new Promise((resolve, reject)=>{\n            if (!this.db) {\n                reject(new Error(\"Database not initialized\"));\n                return;\n            }\n            const transaction = this.db.transaction(STORE_NAME, \"readonly\");\n            const store = transaction.objectStore(STORE_NAME);\n            const request = store.getAll();\n            request.onsuccess = ()=>{\n                const items = request.result;\n                resolve(items.filter((item)=>item.archived));\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    async addItem(item) {\n        return new Promise((resolve, reject)=>{\n            if (!this.db) {\n                reject(new Error(\"Database not initialized\"));\n                return;\n            }\n            const transaction = this.db.transaction(STORE_NAME, \"readwrite\");\n            const store = transaction.objectStore(STORE_NAME);\n            const request = store.add(item);\n            request.onsuccess = ()=>{\n                resolve(request.result);\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    async updateItem(item) {\n        return new Promise((resolve, reject)=>{\n            if (!this.db) {\n                reject(new Error(\"Database not initialized\"));\n                return;\n            }\n            const transaction = this.db.transaction(STORE_NAME, \"readwrite\");\n            const store = transaction.objectStore(STORE_NAME);\n            const request = store.put(item);\n            request.onsuccess = ()=>{\n                resolve();\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    async deleteItem(id) {\n        return new Promise((resolve, reject)=>{\n            if (!this.db) {\n                reject(new Error(\"Database not initialized\"));\n                return;\n            }\n            const transaction = this.db.transaction(STORE_NAME, \"readwrite\");\n            const store = transaction.objectStore(STORE_NAME);\n            const request = store.delete(id);\n            request.onsuccess = ()=>{\n                resolve();\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    async archiveItem(id) {\n        return new Promise((resolve, reject)=>{\n            if (!this.db) {\n                reject(new Error(\"Database not initialized\"));\n                return;\n            }\n            const transaction = this.db.transaction(STORE_NAME, \"readwrite\");\n            const store = transaction.objectStore(STORE_NAME);\n            const request = store.get(id);\n            request.onsuccess = ()=>{\n                const item = request.result;\n                if (item) {\n                    item.archived = true;\n                    const updateRequest = store.put(item);\n                    updateRequest.onsuccess = ()=>resolve();\n                    updateRequest.onerror = ()=>reject(updateRequest.error);\n                } else {\n                    reject(new Error(\"Item not found\"));\n                }\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    async restoreItem(id) {\n        return new Promise((resolve, reject)=>{\n            if (!this.db) {\n                reject(new Error(\"Database not initialized\"));\n                return;\n            }\n            const transaction = this.db.transaction(STORE_NAME, \"readwrite\");\n            const store = transaction.objectStore(STORE_NAME);\n            const request = store.get(id);\n            request.onsuccess = ()=>{\n                const item = request.result;\n                if (item) {\n                    item.archived = false;\n                    const updateRequest = store.put(item);\n                    updateRequest.onsuccess = ()=>resolve();\n                    updateRequest.onerror = ()=>reject(updateRequest.error);\n                } else {\n                    reject(new Error(\"Item not found\"));\n                }\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    }\n    constructor(){\n        this.db = null;\n    }\n}\nconst db = new DatabaseService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/db.ts\n"));

/***/ })

});